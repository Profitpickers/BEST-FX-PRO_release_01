//+------------------------------------------------------------------+
//|                CurrencyStrengthAnalyzer.mqh                      |
//|     Modulo per calcolo forza valute da RELEASE_5 + FIX 2025     |
//|     Autore: Vito Iacobellis – www.vitoiacobellis.it             |
//+------------------------------------------------------------------+
#ifndef __CURRENCY_STRENGTH_ANALYZER_MQH__
#define __CURRENCY_STRENGTH_ANALYZER_MQH__

#include "..\\include1\\MovingAverages.mqh"

//--- Enum esteso per metodo MA
enum ENUM_MA_METHOD_EXT
{
   MODE_SMA_EXT = MODE_SMA,
   MODE_EMA_EXT = MODE_EMA
};

//--- Parametri configurabili
struct CurrencyStrengthSettings
{
   int period;
   ENUM_MA_METHOD_EXT method;
};

//--- Classe principale
class CCurrencyStrengthAnalyzer
{
private:
   string currencies[8];
   string pairs[28];
   CurrencyStrengthSettings settings;

public:

   //--- Inizializzazione parametri e array simboli
   void Init(const CurrencyStrengthSettings &cfg)
   {
      settings = cfg;
      InitArrays();
   }

   //--- Inizializza array valute e coppie
   void InitArrays()
   {
      currencies[0] = "AUD"; currencies[1] = "CAD"; currencies[2] = "CHF"; currencies[3] = "EUR";
      currencies[4] = "GBP"; currencies[5] = "JPY"; currencies[6] = "NZD"; currencies[7] = "USD";

      string p[28] = {
   "AUDCAD", "AUDCHF", "AUDJPY", "AUDNZD", "AUDUSD", "CADCHF", "CADJPY", "CHFJPY",
   "EURAUD", "EURCAD", "EURCHF", "EURGBP", "EURJPY", "EURNZD", "EURUSD", "GBPAUD",
   "GBPCAD", "GBPCHF", "GBPJPY", "GBPUSD", "NZDCAD", "NZDJPY", "NZDUSD", "USDCAD",
   "USDCHF", "USDJPY"
};
      ArrayCopy(pairs, p);
   }

   //--- Verifica se simbolo è disponibile nel tester
   bool IsSymbolAvailable(string symbol)
{
   MqlTick tick;
   return (SymbolSelect(symbol, true) && SymbolInfoTick(symbol, tick));
}

   //--- Calcolo forza valuta su timeframe e shift
   double GetCurrencyStrength(string currency, ENUM_TIMEFRAMES tf, int shift = 0)
   {
      double strength = 0;
      int count = 0;

      for (int i = 0; i < ArraySize(pairs); i++)
      {
         string symbol = pairs[i];

         if (!IsSymbolAvailable(symbol))
            continue;

         if (StringFind(symbol, currency) != -1)
         {
            double close = iClose(symbol, tf, shift);
            ENUM_MA_METHOD ma_method = (settings.method == MODE_SMA_EXT) ? MODE_SMA : MODE_EMA;

            int ma_handle = iMA(symbol, tf, settings.period, 0, ma_method, PRICE_CLOSE);
            if (ma_handle == INVALID_HANDLE) continue;

            double ma_buffer[];
            if (CopyBuffer(ma_handle, 0, shift, 1, ma_buffer) <= 0) continue;

            double ma = ma_buffer[0];
            if (ma == 0) continue;

            double ratio = (close - ma) / ma;

            if (StringFind(symbol, currency) == 0)
               strength += ratio;
            else
               strength -= ratio;

            count++;
         }
      }

      return (count > 0) ? strength / count : 0;
   }

   //--- Restituisce nome valuta da indice
   string GetCurrency(int index)
   {
      return (index >= 0 && index < 8) ? currencies[index] : "";
   }
};

#endif // __CURRENCY_STRENGTH_ANALYZER_MQH__
